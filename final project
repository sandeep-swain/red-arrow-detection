import cv2
import numpy as np
#def nothing(x):
    #pass
cap=cv2.VideoCapture(0)

#cv2.namedWindow("trackbars")
#cv2.createTrackbar("L-H", "Trackbars", 0, 179, nothing)
#cv2.createTrackbar("L-S", "Trackbars", 0, 255, nothing)
#cv2.createTrackbar("L-V", "Trackbars", 0, 255, nothing)
#cv2.createTrackbar("U-H", "Trackbars", 0, 179, nothing)
#cv2.createTrackbar("U-S", "Trackbars", 0, 255, nothing)
#cv2.createTrackbar("U-V", "Trackbars", 0, 255, nothing)

while True:
    _, frame= cap.read()
    blur=cv2.GaussianBlur(frame, (5,5), 0)
    hsv=cv2.cvtColor(blur,cv2.COLOR_BGR2HSV)

 #   l_h=cv2.getTrackbarPos("L-H", "Trackbars")
 #    l_s=cv2.getTrackbarPos("L-S", "Trackbars")
 #   l_v=cv2.getTrackbarPos("L-V", "Trackbars")
 #   u_h=cv2.getTrackbarPos("U-H", "Trackbars")
 #   u_s=cv2.getTrackbarPos("U-S", "Trackbars")
 #   u_v=cv2.getTrackbarPos("U-V", "Trackbars")

    lower_red=np.array([0,100,100])
    upper_red=np.array([10,255,255])
    mask=cv2.inRange(hsv,lower_red, upper_red)

    

    result= cv2.bitwise_and(frame, frame, mask=mask)

    ab,th1=cv2.threshold(result, 130,255, cv2.THRESH_BINARY)
    contours, hierarchy= cv2.findContours(mask, cv2.RETR_TREE, cv2.CHAIN_APPROX_NONE)

    for contour in contours:
        area= cv2.contourArea(contour)

        if area>1000:
            cv2.drawContours(th1, contours, -1, (0,255,0), 3)

            print(area)
        

    #print('NUMBER OF CONTOURS= ' +str(len(contours)))
    
    
    cv2.imshow('th1', th1)
    cv2.imshow("frame", frame)
    #cv2.imshow("mask", mask)
    cv2.imshow("result", result)
    key= cv2.waitKey(500)
    
    if key== 27:
        break

cap.release()
cv2.destroyAllWindows()
